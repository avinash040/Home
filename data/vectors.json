[
  {
    "id": "b3e32cd30fd3a7774620e9fd7eb43d1a34c062b4dfc17074364b90d547c98cd1",
    "text": "# Avinash Kothapalli - Personal Website\n\nThis repository contains the source for my personal website. The site highlights my professional experience, projects and links to my resume.\n\nTo view the site locally, open `index.html` in a web browser. You can also serve it with any static file server if you prefer.\n\nTo publish the site with GitHub Pages:\n\n1. Push the contents of this repository to GitHub.\n2. In the repository settings, enable GitHub Pages and choose the `main` branch as the source.\n3. The site will be available at `https://<your-username>.github.io/<repository-name>/`.\n\nFeel free to customize the content or styling to keep the site up to date.\n\n## Worker API\n\nThe `worker` directory contains a Cloudflare Worker that backs the `/api/chat` endpoint. It is configured by the `wrangler.toml` file at the repository root, which points to `worker/worker.js` and reads your Gemini API key from the `GEMINI_API_KEY` environment variable.\n\nFor local development:\n\n1. Copy `worker/.dev.vars.example` to `worker/.dev.vars`.\n2. Set `GEMINI_API_KEY` in that file.\n3. Run `npx wrangler dev` from the repository root.\n\nFor deployment on Cloudflare, store the key as a secret:\n\n```sh\nwrangler secret put GEMINI_API_KEY\n```\n\nThen deploy the worker from the repository root:\n\n```sh\nnpx wrangler deploy\n```\n\n## Building the vector index\n\nThe chat endpoint retrieves context from embeddings stored in `data/vectors.json`. After modifying the site's content, rebuild this file so new sections are indexed:\n\n```sh\nnpm run build:vectors\n```\n\nThe build script now breaks large HTML files into article-sized chunks, ensuring details from every work experience are available for retrieval. Set `GEMINI_API_KEY` in your environment before running the command.\n",
    "source": "README.md",
    "embedding": []
  },
  {
    "id": "ca184df0df438fad890a3f7d0729896c21e34548ef9bb8cb887e0c5c27c2869c",
    "text": "<article id=\"senior-delivery-software-engineer-nokia\">\n        <h3>Senior Delivery Software Engineer – Nokia</h3>\n        <p><em>04/2020 – Present | Ottawa, Canada</em></p>\n        <ul>\n          <li>Develops custom network automation software solutions for service providers and enterprises.</li>\n          <li>Builds API interfaces for service provisioning, lifecycle management, and debugging using Yang Models & REST.</li>\n          <li>Designs automation workflows for service deployment aligned to customer OSS and network configurations.</li>\n          <li>Programs custom scripts in JavaScript & Python, deployed via Nokia’s NSP framework for service discovery and management.</li>\n          <li>Regularly collaborates with major telecom clients: Bell, Verizon, Mobily, TPG, Elisa, etc.</li>\n          <li>Provides mentorship to junior engineers and interns.</li>\n          <li>Created custom VS Code webview extensions using Node.js, React, and Bootstrap.</li>\n          <li>Built a log analysis tool leveraging the NSP workflow manager and large language models to accelerate troubleshooting.</li>\n          <li>Worked on autonomous networks and intent-based service deployment using Pydantic and LLaMA AI models.</li>\n        </ul>\n      </article>",
    "source": "index.html#senior-delivery-software-engineer-nokia",
    "embedding": []
  },
  {
    "id": "82dc655b39f9a9c588aaf9f6e82b3820f029e42938eedc9378cce62e58fa55ee",
    "text": "<article id=\"member-of-technical-staff-ii-vmware\">\n        <h3>Member of Technical Staff – II – VMware</h3>\n        <p><em>07/2016 – 04/2020 | Ottawa, Canada</em></p>\n        <ul>\n          <li>Migrated Smarts Alerting Engine to a Microservices architecture using Kubernetes, Kafka, gRPC.</li>\n          <li>Conducted Core Java development for Versa SD-WAN & SAS integration.</li>\n          <li>Built a high-performance Python data collector and push gateway to integrate with SD-WAN/SDN orchestrators.</li>\n          <li>Developed a Python-based Velocloud SD-WAN simulator from REST models.</li>\n          <li>Created a prototype Angular UI frontend for Smarts Alerting Engine.</li>\n          <li>Researched and evaluated Kafka Streams & Apache Flink for KPI metric processing.</li>\n          <li>Managed Nokia ASAM and VMware SAS certification for British Telecom.</li>\n        </ul>\n        <p>Explore more:</p>\n        <ul class=\"vmware-links\">\n          <li><a href=\"vmware/java.html\">Java projects</a></li>\n          <li><a href=\"vmware/python.html\">Python projects</a></li>\n          <li><a href=\"vmware/docker.html\">Docker</a></li>\n          <li><a href=\"vmware/kafka.html\">Kafka</a></li>\n          <li><a href=\"vmware/aws.html\">AWS</a></li>\n          <li><a href=\"vmware/angular.html\">Angular</a></li>\n          <li><a href=\"vmware/kubernetes.html\">Kubernetes</a></li>\n          <li><a href=\"vmware/jenkins.html\">Jenkins</a></li>\n        </ul>\n      </article>",
    "source": "index.html#member-of-technical-staff-ii-vmware",
    "embedding": []
  },
  {
    "id": "060af9b35dbc889df38b1ee5da5757e6fbb0615d529938a74ad6047ea1ca58c4",
    "text": "<article id=\"software-engineer-cisco-systems\">\n        <h3>Software Engineer – Cisco Systems</h3>\n        <p><em>07/2012 – 06/2016 | Ottawa, Canada</em></p>\n        <ul>\n          <li>Developed protocol-level features for Cisco IOS/XR.</li>\n          <li>Implemented MPLS TP performance management (RFC 6374) and Linear protection (RFC 6378).</li>\n          <li>Contributed to development of EVPN, VPWS, VPLS, L2TPv3, and L2 bridge domains.</li>\n          <li>Built internal unit testing tools.</li>\n          <li>Specialized in LDP, BGP, MPLS Traffic Engineering.</li>\n          <li>Maintained private cloud infrastructure with Cisco UCS servers, vSphere, and OpenStack.</li>\n        </ul>\n      </article>",
    "source": "index.html#software-engineer-cisco-systems",
    "embedding": []
  },
  {
    "id": "969ad21006eca1fb5c0f2df74466c26be422944a56d94cf109bec18619846d91",
    "text": "<article id=\"software-designer-protocol-associate-co-op-blackberry\">\n        <h3>Software Designer / Protocol Associate (Co-op) – Blackberry</h3>\n        <p><em>05/2010 – 09/2011 | Ottawa, Canada</em></p>\n        <ul>\n          <li>Developed features for Blackberry device radio & OS modules (C, Java).</li>\n          <li>Conducted wireless protocol performance analysis.</li>\n          <li>Rotated across multiple teams over 16 months of internships.</li>\n        </ul>\n      </article>",
    "source": "index.html#software-designer-protocol-associate-co-op-blackberry",
    "embedding": []
  },
  {
    "id": "a986a1c0d1635bc46a6b8565c47b2fbdacf6f53fcbe9ad035eb8a99034d8d677",
    "text": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <title>VMware – Angular</title>\n  <link rel=\"stylesheet\" href=\"../styles.css\">\n</head>\n<body>\n  <header>\n    <h1>VMware: Angular UI</h1>\n    <nav><a href=\"../index.html#experience\">&larr; Back to Experience</a></nav>\n  </header>\n  <main>\n    <section>\n      <p>Designed the project's web UI using Balsamiq wireframes and implemented it with Angular. Leveraged VMware's <a href=\"https://clarity.design/\">Clarity Design</a> framework for consistent styling and components.</p>\n    </section>\n  </main>\n  <footer>\n    <p>&copy; <span id=\"year\"></span> Avinash Kothapalli</p>\n  </footer>\n  <script>\n    document.getElementById('year').textContent = new Date().getFullYear();\n  </script>\n</body>\n</html>\n",
    "source": "vmware/angular.html",
    "embedding": []
  },
  {
    "id": "6e38a09d557d6cad57aaf90554a408fde367ec65558666a2d4fa72e0b3da6119",
    "text": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <title>VMware – AWS</title>\n  <link rel=\"stylesheet\" href=\"../styles.css\">\n</head>\n<body>\n  <header>\n    <h1>VMware: AWS Deployment</h1>\n    <nav><a href=\"../index.html#experience\">&larr; Back to Experience</a></nav>\n  </header>\n  <main>\n    <section>\n      <p>Took ownership of the Nokia ASAM and SMARTS certification for British Telecom, deploying SMARTS infrastructure on AWS. Utilized S3 storage and multiple EC2 instances, gaining hands-on experience with networking setup and other AWS features.</p>\n    </section>\n  </main>\n  <footer>\n    <p>&copy; <span id=\"year\"></span> Avinash Kothapalli</p>\n  </footer>\n  <script>\n    document.getElementById('year').textContent = new Date().getFullYear();\n  </script>\n</body>\n</html>\n",
    "source": "vmware/aws.html",
    "embedding": []
  },
  {
    "id": "ea1491d28de3aa6208b7309dc2db20ed6a506f66d5b0238376cd59841dc0e592",
    "text": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <title>VMware – Docker</title>\n  <link rel=\"stylesheet\" href=\"../styles.css\">\n</head>\n<body>\n  <header>\n    <h1>VMware: Docker Experience</h1>\n    <nav><a href=\"../index.html#experience\">&larr; Back to Experience</a></nav>\n  </header>\n  <main>\n    <section>\n      <p>Containerized Java-based data collectors using Docker, initially orchestrated with Docker Compose. Gained deep insights into Docker networking and persistent storage both on disk and within MongoDB. Also established a local Docker registry for the team using Artifactory.</p>\n    </section>\n  </main>\n  <footer>\n    <p>&copy; <span id=\"year\"></span> Avinash Kothapalli</p>\n  </footer>\n  <script>\n    document.getElementById('year').textContent = new Date().getFullYear();\n  </script>\n</body>\n</html>\n",
    "source": "vmware/docker.html",
    "embedding": []
  },
  {
    "id": "815bdc48a96d58e04857ff93a54bd7424c60ad4a6fa9b1bd6db8b3e33cc4915e",
    "text": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <title>VMware – Java Projects</title>\n  <link rel=\"stylesheet\" href=\"../styles.css\">\n</head>\n<body>\n  <header>\n    <h1>VMware: Java Projects</h1>\n    <nav><a href=\"../index.html#experience\">&larr; Back to Experience</a></nav>\n  </header>\n  <main>\n    <section>\n      <h2>Alerting Engine</h2>\n      <p>I implemented the Alerting Engine component of VMware's SMARTS root cause analysis platform. Configuration was loaded from YAML files, templates were defined in JSON, and REST schemas were built using Swagger. The alert processing pipeline first leveraged Kafka Streams before transitioning to Apache Flink.</p>\n    </section>\n    <section>\n      <h2>Velocloud Data Collector</h2>\n      <p>Developed a REST-based data collector that ingests metrics from the Velocloud SD-WAN solution and feeds them into SMARTS. The work involved mastering SD-WAN concepts and defining thresholds and alarms that map to orchestrator data.</p>\n    </section>\n    <section>\n      <h2>Kafka Connector</h2>\n      <p>Implemented a Kafka connector interface enabling SMARTS to interact seamlessly with Kafka as part of the alerting infrastructure.</p>\n    </section>\n  </main>\n  <footer>\n    <p>&copy; <span id=\"year\"></span> Avinash Kothapalli</p>\n  </footer>\n  <script>\n    document.getElementById('year').textContent = new Date().getFullYear();\n  </script>\n</body>\n</html>\n",
    "source": "vmware/java.html",
    "embedding": []
  },
  {
    "id": "93c88910447d914b112a38adc9f385cc0b4dc665723fcfa012185e723bde04f9",
    "text": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <title>VMware – Jenkins</title>\n  <link rel=\"stylesheet\" href=\"../styles.css\">\n</head>\n<body>\n  <header>\n    <h1>VMware: Jenkins CI/CD</h1>\n    <nav><a href=\"../index.html#experience\">&larr; Back to Experience</a></nav>\n  </header>\n  <main>\n    <section>\n      <p>Set up the Jenkins CI/CD environment for the Alerting and Data Collection framework projects. Authored the Gradle-based build script for the Alerting component.</p>\n    </section>\n  </main>\n  <footer>\n    <p>&copy; <span id=\"year\"></span> Avinash Kothapalli</p>\n  </footer>\n  <script>\n    document.getElementById('year').textContent = new Date().getFullYear();\n  </script>\n</body>\n</html>\n",
    "source": "vmware/jenkins.html",
    "embedding": []
  },
  {
    "id": "87babefee0481e9d86ea08295c3b4d5889cae1bc1ec3709fa04d2998fd4e6968",
    "text": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <title>VMware – Kafka</title>\n  <link rel=\"stylesheet\" href=\"../styles.css\">\n</head>\n<body>\n  <header>\n    <h1>VMware: Kafka Work</h1>\n    <nav><a href=\"../index.html#experience\">&larr; Back to Experience</a></nav>\n  </header>\n  <main>\n    <section>\n      <p>Used Kafka as the central message bus across distributed components. Developed alerting engine data processing with the Kafka Streams DSL and authored a Kafka adapter library to streamline integration with SMARTS.</p>\n    </section>\n  </main>\n  <footer>\n    <p>&copy; <span id=\"year\"></span> Avinash Kothapalli</p>\n  </footer>\n  <script>\n    document.getElementById('year').textContent = new Date().getFullYear();\n  </script>\n</body>\n</html>\n",
    "source": "vmware/kafka.html",
    "embedding": []
  },
  {
    "id": "fa48619dfb29ced7b7dfae50544095ceb8806faaa34999f2cf790b1fffce78a9",
    "text": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <title>VMware – Kubernetes</title>\n  <link rel=\"stylesheet\" href=\"../styles.css\">\n</head>\n<body>\n  <header>\n    <h1>VMware: Kubernetes</h1>\n    <nav><a href=\"../index.html#experience\">&larr; Back to Experience</a></nav>\n  </header>\n  <main>\n    <section>\n      <p>Orchestrated the Data Collection Controller and associated collectors using Kubernetes. Gained experience with Minikube configuration, networking, and storage management.</p>\n    </section>\n  </main>\n  <footer>\n    <p>&copy; <span id=\"year\"></span> Avinash Kothapalli</p>\n  </footer>\n  <script>\n    document.getElementById('year').textContent = new Date().getFullYear();\n  </script>\n</body>\n</html>\n",
    "source": "vmware/kubernetes.html",
    "embedding": []
  },
  {
    "id": "70518f6ea24dd7f59814c01fe99d8d81ca9196cd2dd4e2e28300031e14016919",
    "text": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <title>VMware – Python Projects</title>\n  <link rel=\"stylesheet\" href=\"../styles.css\">\n</head>\n<body>\n  <header>\n    <h1>VMware: Python Projects</h1>\n    <nav><a href=\"../index.html#experience\">&larr; Back to Experience</a></nav>\n  </header>\n  <main>\n    <section>\n      <h2>Velocloud Simulator</h2>\n      <p>Built a simulator to replicate complex Velocloud SD-WAN topologies based on API specifications. The simulator serialized existing setups and emulated them using the Python Connexion library with a Flask-driven REST interface.</p>\n    </section>\n    <section>\n      <h2>Data Collection Controller</h2>\n      <p>Created a Python and Flask-based orchestrator managing containerized data collectors with MongoDB for state. Deployment was handled through Kubernetes for scalable operation.</p>\n    </section>\n    <section>\n      <h2>Unit Tests and Scripts</h2>\n      <p>Authored numerous utility scripts and unit-testing helpers throughout my career, including an OpenCV-based face recognition tool.</p>\n    </section>\n  </main>\n  <footer>\n    <p>&copy; <span id=\"year\"></span> Avinash Kothapalli</p>\n  </footer>\n  <script>\n    document.getElementById('year').textContent = new Date().getFullYear();\n  </script>\n</body>\n</html>\n",
    "source": "vmware/python.html",
    "embedding": []
  }
]